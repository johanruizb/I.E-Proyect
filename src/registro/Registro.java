/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package registro;

import db.BaseDatos;
import java.awt.Color;
import java.awt.Dimension;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.border.Border;
import login.Login;
import login.Usuario;

/**
 *
 * @author Victor
 */
public class Registro extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Registro() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        panel = new javax.swing.JPanel();
        panelPrincipal = new javax.swing.JPanel();
        nombre = new javax.swing.JTextField();
        apellidos = new javax.swing.JTextField();
        cedula = new javax.swing.JTextField();
        ciudad = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        comprobarEmail = new javax.swing.JTextField();
        nombreEmpresa = new javax.swing.JTextField();
        departamento = new javax.swing.JTextField();
        contraseña = new javax.swing.JPasswordField();
        verificarContraseña = new javax.swing.JPasswordField();
        titulo = new javax.swing.JLabel();
        creaRegistro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(501, 288));

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setPreferredSize(new java.awt.Dimension(869, 500));
        bg.setLayout(new javax.swing.BoxLayout(bg, javax.swing.BoxLayout.LINE_AXIS));
        bg.setSize(new Dimension(501,288));

        panel.setBackground(new java.awt.Color(204,204,204));
        panel.setMinimumSize(new java.awt.Dimension(896, 500));
        panel.setPreferredSize(new java.awt.Dimension(896, 500));
        panel.setLayout(new java.awt.GridBagLayout());

        panelPrincipal.setBackground(new java.awt.Color(204,204,204));
        panelPrincipal.setToolTipText("");
        panelPrincipal.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        panelPrincipal.setName(""); // NOI18N

        nombre.setBackground(new java.awt.Color(255, 255, 255));
        nombre.setFont(new java.awt.Font("Roboto", 0, 11)); // NOI18N
        nombre.setText("Nombre:");
        nombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nombreFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nombreFocusLost(evt);
            }
        });

        apellidos.setBackground(new java.awt.Color(255, 255, 255));
        apellidos.setFont(new java.awt.Font("Roboto", 0, 11)); // NOI18N
        apellidos.setText("Apellidos:");
        apellidos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                apellidosFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                apellidosFocusLost(evt);
            }
        });

        cedula.setBackground(new java.awt.Color(255, 255, 255));
        cedula.setFont(new java.awt.Font("Roboto", 0, 11)); // NOI18N
        cedula.setText("Número de cedula:");
        cedula.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cedulaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cedulaFocusLost(evt);
            }
        });

        ciudad.setBackground(new java.awt.Color(255, 255, 255));
        ciudad.setFont(new java.awt.Font("Roboto", 0, 11)); // NOI18N
        ciudad.setText("Ciudad:");
        ciudad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ciudadFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ciudadFocusLost(evt);
            }
        });

        email.setBackground(new java.awt.Color(255, 255, 255));
        email.setFont(new java.awt.Font("Roboto", 0, 11)); // NOI18N
        email.setText("Email:");
        email.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                emailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailFocusLost(evt);
            }
        });

        comprobarEmail.setBackground(new java.awt.Color(255, 255, 255));
        comprobarEmail.setFont(new java.awt.Font("Roboto", 0, 11)); // NOI18N
        comprobarEmail.setText("Comprobar Email:");
        comprobarEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                comprobarEmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                comprobarEmailFocusLost(evt);
            }
        });

        nombreEmpresa.setBackground(new java.awt.Color(255, 255, 255));
        nombreEmpresa.setFont(new java.awt.Font("Roboto", 0, 11)); // NOI18N
        nombreEmpresa.setText("Empresa:");
        nombreEmpresa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nombreEmpresaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nombreEmpresaFocusLost(evt);
            }
        });

        departamento.setBackground(new java.awt.Color(255, 255, 255));
        departamento.setFont(new java.awt.Font("Roboto", 0, 11)); // NOI18N
        departamento.setText("Area Operativa:");
        departamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                departamentoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                departamentoFocusLost(evt);
            }
        });

        contraseña.setBackground(new java.awt.Color(255, 255, 255));
        contraseña.setFont(new java.awt.Font("Roboto", 0, 11)); // NOI18N
        contraseña.setText("Contraseña:");
        contraseña.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                contraseñaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                contraseñaFocusLost(evt);
            }
        });

        verificarContraseña.setBackground(new java.awt.Color(255, 255, 255));
        verificarContraseña.setFont(new java.awt.Font("Roboto", 0, 11)); // NOI18N
        verificarContraseña.setText("Contraseña:");
        verificarContraseña.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                verificarContraseñaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                verificarContraseñaFocusLost(evt);
            }
        });

        titulo.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo.setText("Registro nuevo usuario");
        titulo.setToolTipText("");

        creaRegistro.setBackground(new java.awt.Color(33, 150, 243));
        creaRegistro.setForeground(new java.awt.Color(255, 255, 255));
        creaRegistro.setText("Registrar");
        creaRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creaRegistroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(nombreEmpresa)
                            .addComponent(email)
                            .addComponent(cedula)
                            .addComponent(nombre)
                            .addComponent(departamento, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(apellidos)
                                .addComponent(ciudad)
                                .addComponent(comprobarEmail)
                                .addComponent(verificarContraseña, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE))
                            .addComponent(contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 11, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addComponent(creaRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ciudad, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cedula, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comprobarEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(departamento, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(verificarContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(creaRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );

        panel.add(panelPrincipal, new java.awt.GridBagConstraints());

        bg.add(panel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean isWhiteSpace(JTextField componente) {
        if (!isEmpty(componente)) {
            String textComponent = String.valueOf(componente.getText());
            for (String s : textComponent.split("(?!^)")) {
                if (s.equals(" ")) {
                    return true;
                }
            }
        }
        return false;
    }

    private boolean isEmpty(JTextField componente) {
        String textComponent = String.valueOf(componente.getText());
        if (textComponent.equals("")) {
            return true;
        }
        return false;
    }

    private boolean isCorrect(JTextField componente) {
        if (!isEmpty(componente) && !isWhiteSpace(componente)) {
            return true;
        }
        return false;
    }

    private void comprobacionBasica(JTextField componente, String defaultText) {
        String textComponent = String.valueOf(componente.getText());

        if (!textComponent.equals(defaultText)) {
            if (isEmpty(componente) || isWhiteSpace(componente)) {
                componente.setBorder(bordeRojo);
                componente.setText(defaultText);
            } else if (isCorrect(componente)) {
                componente.setBorder(bordeAzul);
            }
        }
    }

    private void setEmptyText(JTextField componente, String defaultText) {
        String textComponent = String.valueOf(componente.getText());
        if (textComponent.equals(defaultText)) {
            componente.setText("");
        }
    }

    private boolean validarInfoPersonal() {
        int i = 0;

        if (isCorrect(nombre) && !nombre.getText().equals("Nombre:")) {
            i++;
        } else {
            nombre.setBorder(bordeRojo);
        }

        if (!isEmpty(apellidos) && !apellidos.getText().equals("Apellidos:")) {
            i++;
        } else {
            apellidos.setBorder(bordeRojo);
        }

        if (isCorrect(cedula) && !cedula.getText().equals("Número de cedula:")) {
            i++;
        } else {
            cedula.setBorder(bordeRojo);
        }

        if (i == 3) {
            return true;
        }

        return false;
    }

    private boolean validarInfoAcceso() {
        int i = 0;

        String email1 = email.getText();
        String email2 = comprobarEmail.getText();
        String passW1 = new String(contraseña.getPassword());
        String passW2 = new String(verificarContraseña.getPassword());

        System.out.println("validandoEmail(email1) && validandoEmail(email2) " + (validandoEmail(email1) && validandoEmail(email2)));
        System.out.println("email1.equals(email2) " + email1.equals(email2));

        System.out.println("email1 " + email1);
        System.out.println("email2 " + email2);

        if (validandoEmail(email1) && validandoEmail(email2) && email1.equals(email2)) {
            i++;
        } else {
            email.setBorder(bordeRojo);
            comprobarEmail.setBorder(bordeRojo);
        }
        if (comprobarContraseña(passW1) && comprobarContraseña(passW2) && passW1.equals(passW2)) {
            i++;
        } else {
            contraseña.setBorder(bordeRojo);
            verificarContraseña.setBorder(bordeRojo);
        }
        if (i == 2) {
            return true;
        }

        return false;
    }

    private boolean validarInfoLocacion() {
        int i = 0;

        if (isCorrect(ciudad) && !ciudad.getText().equals("Ciudad:")) {
            i++;
        } else {
            ciudad.setBorder(bordeRojo);
        }

        if (isCorrect(departamento) && !departamento.getText().equals("Area Operativa:")) {
            i++;
        } else {
            departamento.setBorder(bordeRojo);
        }

        if (isCorrect(nombreEmpresa) && !nombreEmpresa.getText().equals("Empresa:")) {
            i++;
        } else {
            nombreEmpresa.setBorder(bordeRojo);
        }

        if (i == 3) {
            return true;
        }

        return false;
    }

    private boolean comprobarDatos() {
        validarInfoPersonal();
        validarInfoAcceso();
        validarInfoLocacion();
        return (validarInfoPersonal() && validarInfoAcceso() && validarInfoLocacion());
    }

    private void nombreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nombreFocusGained
        setEmptyText(nombre, "Nombre:");
    }//GEN-LAST:event_nombreFocusGained

    private void nombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nombreFocusLost
        comprobacionBasica(nombre, "Nombre:");
    }//GEN-LAST:event_nombreFocusLost

    private void apellidosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_apellidosFocusGained
        setEmptyText(apellidos, "Apellidos:");
    }//GEN-LAST:event_apellidosFocusGained

    private void apellidosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_apellidosFocusLost
        if (!apellidos.getText().equals("Apellidos:")) {
            if (!isEmpty(apellidos)) {
                apellidos.setBorder(bordeAzul);
            } else {
                apellidos.setBorder(bordeRojo);
                apellidos.setText("Apellidos:");
            }
        }
    }//GEN-LAST:event_apellidosFocusLost

    private void cedulaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cedulaFocusGained
        setEmptyText(cedula, "Número de cedula:");
    }//GEN-LAST:event_cedulaFocusGained

    private void cedulaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cedulaFocusLost
        comprobacionBasica(cedula, "Número de cedula:");
    }//GEN-LAST:event_cedulaFocusLost

    private void ciudadFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ciudadFocusGained
        setEmptyText(ciudad, "Ciudad:");
    }//GEN-LAST:event_ciudadFocusGained

    private void ciudadFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ciudadFocusLost
        comprobacionBasica(ciudad, "Ciudad:");
    }//GEN-LAST:event_ciudadFocusLost

    private boolean validandoEmail(String emailEntrante) {
        String validacion = "^[a-zA-Z0-9_!#$%&'*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$";
        Pattern pattern = Pattern.compile(validacion);
        Matcher matcher = pattern.matcher(emailEntrante);

        if (matcher.matches()) {
            //JOptionPane.showMessageDialog(this, "Email correcto");
            email.setBorder(bordeAzul);
            return true;
        } else {
            email.setBorder(bordeRojo);
            return false;
        }
    }

    private void emailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFocusGained
        setEmptyText(email, "Email:");
    }//GEN-LAST:event_emailFocusGained

    private void emailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFocusLost
        validandoEmail(email.getText());
    }//GEN-LAST:event_emailFocusLost

    private void comprobarEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comprobarEmailFocusLost
        if (!comprobarEmail.getText().equals("Comprobar Email:")) {
            String emailUsuario = email.getText();
            if (emailUsuario.equals(comprobarEmail.getText())
                    && isCorrect(comprobarEmail)) {
                comprobarEmail.setBorder(bordeAzul);
                email.setBorder(bordeAzul);
            } else {
                comprobarEmail.setBorder(bordeRojo);
                email.setBorder(bordeRojo);
                comprobarEmail.setText("Comprobar Email:");
            }
        }
    }//GEN-LAST:event_comprobarEmailFocusLost

    private void comprobarEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comprobarEmailFocusGained
        setEmptyText(comprobarEmail, "Comprobar Email:");
    }//GEN-LAST:event_comprobarEmailFocusGained

    private void nombreEmpresaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nombreEmpresaFocusLost
        comprobacionBasica(nombreEmpresa, "Empresa:");
    }//GEN-LAST:event_nombreEmpresaFocusLost

    private void departamentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_departamentoFocusGained
        setEmptyText(departamento, "Area Operativa:");
    }//GEN-LAST:event_departamentoFocusGained

    private void departamentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_departamentoFocusLost
        comprobacionBasica(departamento, "Area Operativa:");
    }//GEN-LAST:event_departamentoFocusLost

        private void contraseñaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contraseñaFocusGained
            setEmptyText(contraseña, "Contraseña:");
    }//GEN-LAST:event_contraseñaFocusGained


    private void contraseñaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contraseñaFocusLost
        String password = new String(contraseña.getPassword());
        if (!password.equals("Contraseña:")) {
            if (!isCorrect(contraseña)) {
                contraseña.setBorder(bordeRojo);
                contraseña.setText("Contraseña:");
            } else if (isCorrect(contraseña)) {

                if (comprobarContraseña(password)) {
                    contraseña.setBorder(bordeAzul);
                } else {
                    contraseña.setBorder(bordeRojo);
                    contraseña.setText("Contraseña:");
                }
            }
        }
    }//GEN-LAST:event_contraseñaFocusLost

    private boolean comprobarContraseña(String passW) {
        String passworValido = ("^[A-Za-z\\d$@$#_!%*?&]{06,15}$");

        Pattern patron = Pattern.compile(passworValido);
        Matcher comparar = patron.matcher(passW);

        return comparar.matches();
    }

    private void verificarContraseñaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_verificarContraseñaFocusLost
        String password = new String(contraseña.getPassword());
        String password2 = new String(verificarContraseña.getPassword());

        if (!(password.equals("Contraseña:") && password2.equals("Contraseña:"))) {
            if (password2.equals(password) && !isEmpty(contraseña)) {
                verificarContraseña.setBorder(bordeAzul);
                contraseña.setBorder(bordeAzul);
            } else {
                verificarContraseña.setBorder(bordeRojo);
                verificarContraseña.setText("Contraseña:");
                contraseña.setBorder(bordeRojo);
            }
        }
    }//GEN-LAST:event_verificarContraseñaFocusLost

    private void verificarContraseñaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_verificarContraseñaFocusGained
        setEmptyText(verificarContraseña, "Contraseña:");
    }//GEN-LAST:event_verificarContraseñaFocusGained

    private void nombreEmpresaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nombreEmpresaFocusGained
        setEmptyText(nombreEmpresa, "Empresa:");
    }//GEN-LAST:event_nombreEmpresaFocusGained

    private void creaRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creaRegistroActionPerformed
        if (comprobarDatos()) {
            BaseDatos.conectarBD();
            Usuario user = new Usuario();
            user.setInformacionPersonal(cedula.getText(), nombre.getText(), apellidos.getText());
            user.setInformacionAcceso(email.getText(), String.valueOf(contraseña.getPassword()));
            user.setInformacionLocacion(ciudad.getText(), nombreEmpresa.getText(), departamento.getText());
            BaseDatos.añadirUsuario(user);

            this.dispose();
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
             */
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            //</editor-fold>

            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                @Override
                public void run() {
                    new Login().setVisible(true);
                }
            });

        } else {
            JOptionPane.showMessageDialog(this, "Formulario incompleto o incorrecto algun campo\nPor favor, revisalo e intentalo de nuevo");
        }
    }//GEN-LAST:event_creaRegistroActionPerformed

    private Border bordeRojo = BorderFactory.createLineBorder(Color.RED);
    private Border bordeAzul = BorderFactory.createLineBorder(Color.BLUE);
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apellidos;
    private javax.swing.JPanel bg;
    private javax.swing.JTextField cedula;
    private javax.swing.JTextField ciudad;
    private javax.swing.JTextField comprobarEmail;
    private javax.swing.JPasswordField contraseña;
    private javax.swing.JButton creaRegistro;
    private javax.swing.JTextField departamento;
    private javax.swing.JTextField email;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField nombreEmpresa;
    private javax.swing.JPanel panel;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JLabel titulo;
    private javax.swing.JPasswordField verificarContraseña;
    // End of variables declaration//GEN-END:variables

}
